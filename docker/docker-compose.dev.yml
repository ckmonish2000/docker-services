version: '3.9'
services:
  users-service:
    container_name: nestjs_user_service
    image: nestjs-user-service:0.1.0
    init: true
    build:
      context: ../user
      dockerfile: dockerfile
      target: dev
    restart: unless-stopped
    env_file:
      - ../Setup.env
    command: npm run start:dev
    depends_on:
      - db
    volumes:
      - ../user:/usr/src/app
      - /usr/src/app/node_modules
    networks:
      - infra
    ports:
      - 9229:9229

  orders-service:
    container_name: nestjs_orders_service
    image: nestjs-orders-service:0.1.0
    init: true
    build:
      context: ../orders
      dockerfile: ./dockerfile
      target: dev
    restart: unless-stopped
    env_file:
      - ../Setup.env
    command: npm run start:dev
    depends_on:
      - db
      - users-service
    volumes:
      - ../orders:/usr/src/app
      - /usr/src/app/node_modules
    networks:
      - infra
    ports:
      - 9230:9229

  products-service:
    container_name: nestjs_products_service
    image: nestjs-products-service:0.1.0
    init: true
    build:
      context: ../products
      dockerfile: ./dockerfile
      target: dev
    restart: unless-stopped
    env_file:
      - ../Setup.env
    command: npm run start:dev
    depends_on:
      - db
      - users-service
      - orders-service
    volumes:
      - ../products:/usr/src/app
      - /usr/src/app/node_modules
    networks:
      - infra
    ports:
      - 9231:9229

  db:
    image: postgres:15.1-alpine
    container_name: infra-db
    restart: unless-stopped
    env_file:
      - ../Setup.env
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - infra
    ports:
      - 5432:5432

  proxy:
    image: caddy:2.6.4-alpine
    container_name: caddy-service
    restart: unless-stopped
    init: true
    ports:
      - 4000:4000
      - 5000:5000
      - 6000:6000
      # - 80:80
      # - 443:443
    volumes:
      - ../Caddyfile:/etc/caddy/Caddyfile
      - ../site:/srv
      - caddy_data:/data
      - caddy_config:/config
    depends_on:
      - users-service
      - orders-service
      - products-service
    networks:
      - infra

volumes:
  pgdata:
  caddy_data:
  caddy_config:


networks:
  infra:


